dist: xenial
sudo: required

matrix:
  include:
  - os: linux
    dist: xenial
    language: python
    python: 3.6
    after_success:
    - bash scripts/bump_script.sh
    # TODO - add github personal access token in repository settings
    - bash scripts/git_push.sh
    # TODO - put pypi credentials in travis repository settings
    deploy:
      provider: pypi
      user: $PYPI_USER
      password: $PYPI_PASSWORD
      on:
        tags: true
  - os: linux
    dist: xenial
    language: python
    python: 3.7
  - os: osx
    language: generic
    env: PYTHON_VERSION="3.6"
  - os: osx
    language: generic
    env: PYTHON_VERSION="3.7"

before_install:
# getting around how travis sets boto configuration
# see https://github.com/travis-ci/travis-ci/issues/7940
- export BOTO_CONFIG=/dev/null
- git config --global user.email "travis@travis-ci.org"
- git config --global user.name "Travis CI"

install:
- |
  if [ $TRAVIS_OS_NAME = 'osx' ]; then 
      echo "Installing brew packages..."  
      brew install graphviz
      echo "Setting up conda environment..."
      wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh || exit 1
      bash miniconda.sh -b -p "$HOME/miniconda3" || exit 1
      export PATH=$HOME/miniconda3/bin:$PATH
      conda config --set always_yes true || exit 1
      conda create -n primrose python=$PYTHON_VERSION || exit 1
      echo "Activating conda environment"
      source activate primrose
      echo "Updating matplotlib configuration"
      mkdir -p ~/.matplotlib && touch ~/.matplotlib/matplotlibrc
      "`echo backend: TkAgg >> ~/.matplotlib/matplotlibrc`"
  elif [ $TRAVIS_OS_NAME = 'linux' ]; then
      echo "Installing linux packages"
      sudo add-apt-repository universe
      sudo apt update
      sudo apt-get install graphviz
      echo "Updating matplotlib configuration"
      mkdir -p ~/.config/matplotlib && touch ~/.config/matplotlib/matplotlibrc
      "`echo backend: Agg >> ~/.config/matplotlib/matplotlibrc`"
  fi

  echo "Installing requirements"
  pip install -r requirements.txt

  pip install --upgrade bump2version

script:
- python -m pytest

branches:
  only:
  - master
  - .*release.*

env:
  global:
  - BUMP_PART=release