# language: python
# dist: xenial
# sudo: required

# env:
#   matrix:
#     - PYPI_BUILD="complete"
#     - PYPI_BUILD="only_plotting"
#     - PYPI_BUILD="only_postgres"
#     - PYPI_BUILD="basic"

# matrix:
#   include:
#   - os: linux
#     dist: xenial
#     language: python
#     python: 3.6
#   - os: linux
#     dist: xenial
#     language: python
#     python: 3.7
#   - os: osx
#     language: generic
#     env: PYTHON_VERSION="3.6"
#   - os: osx
#     language: generic
#     env: PYTHON_VERSION="3.7"

# language: python
dist: xenial
sudo: required

os:
  - linux
  - osx

python:
  - 3.6
  - 3.7

env:
  - PYPI_BUILD="complete"
  - PYPI_BUILD="only_plotting"
  - PYPI_BUILD="only_postgres"
  - PYPI_BUILD="basic"

matrix:
  exclude:
    - os: osx
      python: 3.6
    - os: osx
      python: 3.7
  include:
  - os: osx
    language: generic
    env: PYTHON_VERSION="3.6"
  - os: osx
    language: generic
    env: PYTHON_VERSION="3.7"

before_install:
# getting around how travis sets boto configuration
# see https://github.com/travis-ci/travis-ci/issues/7940
- export BOTO_CONFIG=/dev/null

install:
# os dependencies and set up matplotlib backend
# travis does not support python on osx - install via miniconda
- |
  if [ $TRAVIS_OS_NAME = 'osx' ]; then
    echo "Installing brew packages..."
    brew install graphviz
    echo "Setting up conda environment..."
    wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh || exit 1
    bash miniconda.sh -b -p "$HOME/miniconda3" || exit 1
    export PATH=$HOME/miniconda3/bin:$PATH
    conda config --set always_yes true || exit 1
    conda create -n primrose python=$PYTHON_VERSION || exit 1
    echo "Activating conda environment"
    source activate primrose
    echo "Updating matplotlib configuration"
    mkdir -p ~/.matplotlib && touch ~/.matplotlib/matplotlibrc
    "`echo backend: TkAgg >> ~/.matplotlib/matplotlibrc`"
  fi
  if [ $TRAVIS_OS_NAME = 'linux' ]; then
    echo "Installing linux packages"
    sudo apt-get install graphviz
    echo "Updating matplotlib configuration"
    mkdir -p ~/.config/matplotlib && touch ~/.config/matplotlib/matplotlibrc
    "`echo backend: Agg >> ~/.config/matplotlib/matplotlibrc`"
  fi
  echo "Installing requirements"
  pip install -r requirements.txt
  if [ $PYPI_BUILD = 'complete' ]; then
    echo "Installing postgres and plotting requirements"
    pip install psycopg2>=2.8.3
    pip install psycopg2_binary>=2.8.2
    pip install pygraphviz>=1.5
  elif [ $PYPI_BUILD = 'only_postgres' ]; then
    echo "Installing postgres requirements"
    pip install psycopg2>=2.8.3
    pip install psycopg2_binary>=2.8.2
  elif [ $PYPI_BUILD = 'only_plotting' ]; then
    echo "Installing plotting requirements"
    pip install pygraphviz>=1.5
  fi

script:
  - |
    if [ $PYPI_BUILD = 'complete' ]; then
        python -m pytest
    elif [ $PYPI_BUILD = 'only_plotting' ]; then
        python -m pytest -m "not postgres"
    elif [ $PYPI_BUILD = 'only_postgres' ]; then
        python -m pytest -m "not plotting"
    else
        python -m pytest -m "not optional"
    fi

branches:
  only:
  - master
